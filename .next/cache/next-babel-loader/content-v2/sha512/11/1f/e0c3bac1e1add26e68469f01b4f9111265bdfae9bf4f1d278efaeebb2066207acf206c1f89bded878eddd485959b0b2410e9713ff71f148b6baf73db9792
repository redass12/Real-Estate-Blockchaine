{"ast":null,"code":"var _jsxFileName = \"E:\\\\ReaEstat-Mini Project\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport RealEstate from \"../ethereum/RealEstate\";\nimport { Card, Button, Grid } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport { Link } from \"../routes\";\nimport web3 from \"../ethereum/web3\";\nimport HOC from \"../components/Hoc\";\n\nclass RealEstateIndex extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      owner: \"\",\n      isContractOwner: false\n    });\n  }\n\n  static async getInitialProps() {\n    const tokenCount = await RealEstate.methods.indexx().call();\n    const contractOwner = await RealEstate.methods.owner().call();\n    const tokens = await Promise.all(Array(parseInt(tokenCount)).fill().map((element, index) => {\n      return RealEstate.methods.indexToToken(index).call();\n    }));\n    return {\n      tokens,\n      contractOwner\n    };\n  }\n\n  async componentDidMount() {\n    const accounts = await web3.eth.getAccounts();\n    const owner = accounts[0];\n\n    if (this.props.contractOwner === accounts[0]) {\n      this.setState({\n        contractOwner: true\n      });\n    }\n\n    this.setState({\n      owner: owner\n    });\n    console.log(accounts[0], this.props.contractOwner);\n  }\n\n  renderTokens() {\n    const tokens = this.props.tokens.map((item, index) => {\n      return {\n        image: `https://ipfs.io/ipfs/${item.image}`,\n        header: `${item.name} add: ${item.owner.slice(0, 5)}`,\n        meta: item.adress,\n        extra: __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }\n        }, __jsx(\"a\", {\n          class: \"ui tag label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }\n        }, item.price, \" Wei\"), item.inSell ? __jsx(\"a\", {\n          class: \"ui teal tag label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }\n        }, \"In Sell\") : __jsx(\"a\", {\n          class: \"ui red tag label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }\n        }, \"Not In sell Yet\")),\n        description: __jsx(Link, {\n          route: `/House/${index}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }\n        }, __jsx(\"a\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }\n        }, \"view Home\"))\n      };\n    });\n    return __jsx(Card.Group, {\n      items: tokens,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 12\n      }\n    });\n  }\n\n  render() {\n    console.log(\"tokens\", this.props.tokens);\n    console.log(this.state.owner);\n    return __jsx(Layout, {\n      owner: this.state.owner,\n      isContractOwner: this.state.isContractOwner,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, this.renderTokens()));\n  }\n\n}\n\nexport default HOC(RealEstateIndex);","map":{"version":3,"sources":["E:/ReaEstat-Mini Project/pages/index.js"],"names":["React","Component","RealEstate","Card","Button","Grid","Layout","Link","web3","HOC","RealEstateIndex","owner","isContractOwner","getInitialProps","tokenCount","methods","indexx","call","contractOwner","tokens","Promise","all","Array","parseInt","fill","map","element","index","indexToToken","componentDidMount","accounts","eth","getAccounts","props","setState","console","log","renderTokens","item","image","header","name","slice","meta","adress","extra","price","inSell","description","render","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport RealEstate from \"../ethereum/RealEstate\";\r\nimport { Card, Button, Grid } from \"semantic-ui-react\";\r\nimport Layout from \"../components/Layout\";\r\nimport { Link } from \"../routes\";\r\nimport web3 from \"../ethereum/web3\";\r\nimport HOC from \"../components/Hoc\";\r\nclass RealEstateIndex extends Component {\r\n  state = {\r\n    owner: \"\",\r\n    isContractOwner: false,\r\n  };\r\n  static async getInitialProps() {\r\n    const tokenCount = await RealEstate.methods.indexx().call();\r\n    const contractOwner = await RealEstate.methods.owner().call();\r\n    const tokens = await Promise.all(\r\n      Array(parseInt(tokenCount))\r\n        .fill()\r\n        .map((element, index) => {\r\n          return RealEstate.methods.indexToToken(index).call();\r\n        })\r\n    );\r\n\r\n    return { tokens, contractOwner };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const accounts = await web3.eth.getAccounts();\r\n    const owner = accounts[0];\r\n    if (this.props.contractOwner === accounts[0]) {\r\n      this.setState({ contractOwner: true });\r\n    }\r\n    this.setState({ owner: owner });\r\n    console.log(accounts[0], this.props.contractOwner);\r\n  }\r\n\r\n  renderTokens() {\r\n    const tokens = this.props.tokens.map((item, index) => {\r\n      return {\r\n        image: `https://ipfs.io/ipfs/${item.image}`,\r\n        header: `${item.name} add: ${item.owner.slice(0, 5)}`,\r\n        meta: item.adress,\r\n        extra: (\r\n          <div>\r\n            <a class=\"ui tag label\">{item.price} Wei</a>\r\n            {item.inSell ? (\r\n              <a class=\"ui teal tag label\">In Sell</a>\r\n            ) : (\r\n              <a class=\"ui red tag label\">Not In sell Yet</a>\r\n            )}\r\n          </div>\r\n        ),\r\n        description: (\r\n          <Link route={`/House/${index}`}>\r\n            <a>view Home</a>\r\n          </Link>\r\n        ),\r\n      };\r\n    });\r\n\r\n    return <Card.Group items={tokens} />;\r\n  }\r\n\r\n  render() {\r\n    console.log(\"tokens\", this.props.tokens);\r\n    console.log(this.state.owner);\r\n    return (\r\n      <Layout\r\n        owner={this.state.owner}\r\n        isContractOwner={this.state.isContractOwner}\r\n      >\r\n        <div>{this.renderTokens()}</div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HOC(RealEstateIndex);\r\n"]},"metadata":{},"sourceType":"module"}