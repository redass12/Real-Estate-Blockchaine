{"ast":null,"code":"var _jsxFileName = \"E:\\\\ReaEstat-Mini Project\\\\components\\\\Hoc.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport { Modal } from \"semantic-ui-react\";\n\nconst HOC = function (Child) {\n  return class Higher extends React.Component {\n    static getInitialProps(ctx) {\n      return Child.getInitialProps(ctx);\n    }\n\n    render() {\n      let display = null;\n\n      if (false && typeof window.web3 !== \"undefined\") {\n        display = __jsx(Child, _extends({}, this.props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 19\n          }\n        }));\n      } else {\n        console.log(\"we are on the client side maybe and metamask is not defined\");\n        display = __jsx(Modal, {\n          onClose: () => setOpen(false),\n          onOpen: () => setOpen(true),\n          open: open,\n          trigger: __jsx(Button, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 22\n            }\n          }, \"Show Modal\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 11\n          }\n        }, __jsx(Modal.Header, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }\n        }, \"Select a Photo\"), __jsx(Modal.Content, {\n          image: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }\n        }, __jsx(Image, {\n          size: \"medium\",\n          src: \"https://react.semantic-ui.com/images/avatar/large/rachel.png\",\n          wrapped: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }\n        }), __jsx(Modal.Description, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }\n        }, __jsx(Header, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }\n        }, \"Default Profile Image\"), __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }\n        }, \"We've found the following gravatar image associated with your e-mail address.\"), __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }\n        }, \"Is it okay to use this photo?\"))), __jsx(Modal.Actions, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }\n        }, __jsx(Button, {\n          color: \"black\",\n          onClick: () => setOpen(false),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }\n        }, \"Nope\"), __jsx(Button, {\n          content: \"Yep, that's me\",\n          labelPosition: \"right\",\n          icon: \"checkmark\",\n          onClick: () => setOpen(false),\n          positive: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }\n        })));\n      }\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 14\n        }\n      }, display);\n    }\n\n  };\n};\n\nexport default HOC;","map":{"version":3,"sources":["E:/ReaEstat-Mini Project/components/Hoc.js"],"names":["React","Modal","HOC","Child","Higher","Component","getInitialProps","ctx","render","display","window","web3","props","console","log","setOpen","open"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,mBAAtB;;AAEA,MAAMC,GAAG,GAAG,UAAUC,KAAV,EAAiB;AAC3B,SAAO,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAqC;AAC1C,WAAOC,eAAP,CAAuBC,GAAvB,EAA4B;AAC1B,aAAOJ,KAAK,CAACG,eAAN,CAAsBC,GAAtB,CAAP;AACD;;AAEDC,IAAAA,MAAM,GAAG;AACP,UAAIC,OAAO,GAAG,IAAd;;AACA,UAAI,SAAiC,OAAOC,MAAM,CAACC,IAAd,KAAuB,WAA5D,EAAyE;AACvEF,QAAAA,OAAO,GAAG,MAAC,KAAD,eAAW,KAAKG,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAV;AACD,OAFD,MAEO;AACLC,QAAAA,OAAO,CAACC,GAAR,CACE,6DADF;AAGAL,QAAAA,OAAO,GACL,MAAC,KAAD;AACE,UAAA,OAAO,EAAE,MAAMM,OAAO,CAAC,KAAD,CADxB;AAEE,UAAA,MAAM,EAAE,MAAMA,OAAO,CAAC,IAAD,CAFvB;AAGE,UAAA,IAAI,EAAEC,IAHR;AAIE,UAAA,OAAO,EAAE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAME,MAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BANF,EAOE,MAAC,KAAD,CAAO,OAAP;AAAe,UAAA,KAAK,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,KAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,GAAG,EAAC,8DAFN;AAGE,UAAA,OAAO,MAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAME,MAAC,KAAD,CAAO,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2FAFF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CANF,CANF,CAPF,EAsBE,MAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,OAAd;AAAsB,UAAA,OAAO,EAAE,MAAMD,OAAO,CAAC,KAAD,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAIE,MAAC,MAAD;AACE,UAAA,OAAO,EAAC,gBADV;AAEE,UAAA,aAAa,EAAC,OAFhB;AAGE,UAAA,IAAI,EAAC,WAHP;AAIE,UAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,KAAD,CAJxB;AAKE,UAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,CAtBF,CADF;AAqCD;;AACD,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMN,OAAN,CAAP;AACD;;AApDyC,GAA5C;AAsDD,CAvDD;;AAyDA,eAAeP,GAAf","sourcesContent":["import React from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\n\r\nconst HOC = function (Child) {\r\n  return class Higher extends React.Component {\r\n    static getInitialProps(ctx) {\r\n      return Child.getInitialProps(ctx);\r\n    }\r\n\r\n    render() {\r\n      let display = null;\r\n      if (typeof window !== \"undefined\" && typeof window.web3 !== \"undefined\") {\r\n        display = <Child {...this.props} />;\r\n      } else {\r\n        console.log(\r\n          \"we are on the client side maybe and metamask is not defined\"\r\n        );\r\n        display = (\r\n          <Modal\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            trigger={<Button>Show Modal</Button>}\r\n          >\r\n            <Modal.Header>Select a Photo</Modal.Header>\r\n            <Modal.Content image>\r\n              <Image\r\n                size=\"medium\"\r\n                src=\"https://react.semantic-ui.com/images/avatar/large/rachel.png\"\r\n                wrapped\r\n              />\r\n              <Modal.Description>\r\n                <Header>Default Profile Image</Header>\r\n                <p>\r\n                  We've found the following gravatar image associated with your\r\n                  e-mail address.\r\n                </p>\r\n                <p>Is it okay to use this photo?</p>\r\n              </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n              <Button color=\"black\" onClick={() => setOpen(false)}>\r\n                Nope\r\n              </Button>\r\n              <Button\r\n                content=\"Yep, that's me\"\r\n                labelPosition=\"right\"\r\n                icon=\"checkmark\"\r\n                onClick={() => setOpen(false)}\r\n                positive\r\n              />\r\n            </Modal.Actions>\r\n          </Modal>\r\n        );\r\n      }\r\n      return <div>{display}</div>;\r\n    }\r\n  };\r\n};\r\n\r\nexport default HOC;\r\n"]},"metadata":{},"sourceType":"module"}